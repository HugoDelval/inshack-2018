#!/usr/bin/env python3

import re
import os
import string
import requests
from argparse import ArgumentParser
from itertools import product
from ruamel.yaml import safe_load


def exploitable(url):
    r = requests.post(url, data = {'sample':"".join(list(map("".join, product(string.printable,repeat=2))))})
    print(r.text)
    sample = re.search(r'Your encrypted sample is (.*?) and the flag is', r.text).group(1)
    flag = re.search(r'and the flag is (.*?) !', r.text,flags=re.DOTALL).group(1)
    d = {k : v for (v,k) in zip(list(map("".join, product(string.printable,repeat=2))),sample)}
    if "INSA{" in "".join([d[k] for k in flag]):
        return True
    else:
        print("".join([d[k] for k in flag]))
        return False


if __name__ == '__main__':
    current_dir = os.path.dirname(os.path.abspath(__file__))
    mkctf = os.path.join(current_dir, "..", '.mkctf.yml')
    p = ArgumentParser()
    p.add_argument('-c', '--config', default=mkctf,
                   help="Configuration file.")
    args = p.parse_args()

    with open(args.config) as f:
        conf = safe_load(f)

    url = conf['parameters']['exploit']['url']

    exit(0 if exploitable(url) else 1)
